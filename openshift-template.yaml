apiVersion: v1
kind: Template
metadata:
  annotations:
    iconClass: icon-java
  name: ${APPLICATION_NAME}
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      application: ${APPLICATION_NAME}
  spec:
    tags:
    - name: latest
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      application: ${APPLICATION_NAME}
      build: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    source:
      binary: {}
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: 'redhat-openjdk18-openshift:1.2'
      type: Source
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      application: ${APPLICATION_NAME}
  spec:
    replicas: 1
    strategy:
      resources: {}
      type: Rolling
    template:
      metadata:
        labels:
          name: ${APPLICATION_NAME}
      spec:
        containers:
          - env:
            - name: SPRING_PROFILES_ACTIVE
              value: ${SPRING_PROFILES_ACTIVE}
            - name: JAVA_OPTS
              value: -Duser.timezone=Africa/Johannesburg
          image: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          resources:
            limits:
              memory: 1Gi
              cpu: 1
            requests:
              memory: 512Mi
              cpu: 200m
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 75
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: ${APPLICATION_NAME}
parameters:
- displayName: Application name
  name: APPLICATION_NAME
  required: true
  value: greet-service
- displayName: Active Spring profiles
  name: SPRING_PROFILES_ACTIVE
  value: test
